const b={Required:["id","source","specversion","type"],Optional:["subject","time","datacontenttype","dataschema"]},g={headers:{type:"object",properties:{id:{description:"Identifies the event.",type:"string",minLength:1},specversion:{description:"The version of the CloudEvents specification which the event uses.",type:"string",const:"1.0"},source:{description:"Identifies the context in which an event happened.",type:"string",format:"uri-reference",minLength:1},type:{description:"Describes the type of the event related to the source the event originated in.",type:"string",minLength:1},subject:{description:"Describes the subject of the event in the context of the source the event originated in.",type:"string",minLength:1},time:{description:"Timestamp of when the occurrence happened.",type:"string",format:"date-time"},datacontenttype:{description:"Content type of the event data.",type:"string",const:"application/json"},dataschema:{description:"Identifies the schema that the event data adheres to.",type:"string",format:"uri",minLength:1}},required:b.Required}};class l extends Error{}class w{validate(e){this.checkType(e),this.checkAttribute(e,"id"),this.checkAttribute(e,"source"),this.checkAttribute(e,"specversion",/1\.0/g),this.checkAttribute(e,"type",/[\w.]+/g)}checkType(e){if(typeof e!="object"||e===null)throw new l}checkAttribute(e,t,n){if(!(t in e))throw new l(`Missing context attribute '${t}' detected`);if(typeof e[t]!="string")throw new l(`Invalid type for context attribute '${t}' detected`);if(n!=null&&!n.test(e[t]))throw new l(`Invalid value for context attribute '${t}' detected`)}}function A(r){return structuredClone(r)}class a extends Error{}class p{static create(e){switch(e){case void 0:case"v2.0":return new C;default:throw new a(`Unsupported AsyncAPI version '${e}' specified`)}}convert(e){try{new w().validate(e)}catch(t){throw new a("Invalid CloudEvents object provided"+(t.message?`; ${t.message}`:""))}return this.doConvert(e)}convertAsString(e){let t;try{t=JSON.parse(e)}catch(n){throw new a("Invalid CloudEvents JSON string provided"+(n.message?`; ${n.message}`:""))}return JSON.stringify(this.convert(t),void 0,2)}inferType(e){switch(typeof e){case"bigint":case"number":return"number";case"boolean":return"boolean";case"object":return e===null?"null":Array.isArray(e)?"array":"object";case"string":case"symbol":return"string";default:throw new a(`Unknown AsyncAPI data type '${typeof e}' detected`)}}inferFormat(e,t){switch(t){case"number":return"decimal"}}}class C extends p{createChannels(e){const t=e.type.replaceAll(".","_");return{[`ce/${t.replaceAll("_","/")}`]:{subscribe:{message:{$ref:`#/components/messages/${t}`}}}}}createSchemas(e){const t=e.type.replaceAll(".","_"),n={};return this.transform(e.data,t,n),n}createMessages(e){const t=e.type.replaceAll(".","_");return{[t]:{name:e.type,headers:{properties:{type:{const:e.type}}},payload:{$ref:`#/components/schemas/${t}`},traits:[{$ref:"#/components/messageTraits/CloudEventContext"}]}}}createMessageTraits(e){const t=A(g),n=t.headers.properties;for(const[s,o]of Object.entries(e)){if(s in n||s.match(/^[Xx]\w+/)||s==="data")continue;const u=this.inferType(o),y=this.inferFormat(o,u);n[s]={type:u,format:y}}for(const s in n)s in e||delete n[s];return{CloudEventContext:t}}transform(e,t,n){switch(this.inferType(e)){case"object":return this.transformObject(e,t,n);case"array":return this.transformArray(e,t,n);default:return this.transformValue(e,t)}}transformObject(e,t,n){if(Object.keys(e).length===0)throw new a(`Empty object detected for '${t}', cannot infer structure`);const s={type:"object",properties:{}};for(const[o,u]of Object.entries(e))s.properties[o]=this.transform(u,`${t}_${o}`,n);return this.createReference(t,s,n)}transformArray(e,t,n){const s={type:"array",items:{}};if(e.length>0)switch(this.inferType(e[0])){case"object":const o=Object.assign({},...e);this.transformObject(o,t,n),s.items=this.getReference(t);break;case"array":this.transformArray(e[0],t,n),s.items=this.getReference(t);break;default:s.items=this.transformValue(e[0],t);break}return s}transformValue(e,t){if(e===null)throw new a(`'null' value detected for '${t}', cannot infer structure`);const n=this.inferType(e);return{type:n,format:this.inferFormat(e,n)}}getReference(e){return{$ref:`#/components/schemas/${e}`}}createReference(e,t,n){const s=this.getReference(e);return n[e]=t,"type"in t?{type:t.type,...s}:s}doConvert(e){return{asyncapi:"2.0.0",info:{title:"Auto-generated AsyncAPI catalog",version:"0.0.1",description:"AsyncAPI v2.0.0 catalog converted from CloudEvents event payload."},channels:this.createChannels(e),components:{messages:this.createMessages(e),schemas:this.createSchemas(e),messageTraits:this.createMessageTraits(e)}}}}const E=p.create("v2.0"),i=document.getElementById("textarea-cloudevent"),c=document.getElementById("textarea-asyncapi"),d=document.getElementById("status-cloudevent"),h=document.getElementById("download-asyncapi");function v(r){if(r==="")j(),m();else try{f(E.convertAsString(r)),m()}catch(e){f(null),x("invalid",String(e))}[i,c].forEach(e=>{e.parentElement.dataset.replicatedValue=e.value})}function f(r){r===null?(c.value="",i.classList.add("invalid"),h.setAttribute("disabled","")):(c.value=r,i.classList.remove("invalid"),h.removeAttribute("disabled"))}function j(){c.value="",i.classList.remove("invalid"),h.setAttribute("disabled","")}function k(){const r=new Blob([c.value],{type:"application/json"}),e=URL.createObjectURL(r),t=document.createElement("a");t.href=e,t.download=`asyncapi-${Date.now()}.json`,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(e)}function x(r,e){d.innerText=e,d.classList.add(r),d.removeAttribute("hidden")}function m(){d.classList.remove("invalid"),d.innerText=""}i.addEventListener("input",()=>{v(i.value)});c.addEventListener("click",()=>{c.select()});h.addEventListener("click",()=>{k()});document.addEventListener("paste",r=>{r.target!==i&&(i.value=r.clipboardData.getData("text/plain"),v(i.value))});document.querySelectorAll(".tab-title-wrapper").forEach(r=>{const e=r.getAttribute("data-tab-name");r.addEventListener("click",()=>{document.body.setAttribute("data-active-tab-name",e)}),r.addEventListener("keydown",t=>{t.key==="Enter"&&document.body.setAttribute("data-active-tab-name",e)})});
